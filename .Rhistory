dump("control",stdout())
dump("treatment",stdout())
choen.d(treatment,control)
library(effsize)
choen.d(treatment,control)
cohen.d(treatment,control)
exp.data = data.frame(Treatment=rep("treatment","control",each=4),Measure=c(treatment,control))
exp.data = data.frame(Treatment=rep(c("treatment","control"),each=4),Measure=c(treatment,control))
exp.data
cohen.d(exp.data$Measure,exp.data$Treatment)
cohen.d(Measure ~ Treatment,data=exp.dat)
cohen.d(Measure ~ Treatment,data=exp.data)
?cohen.d
??cohen.d
library(effsize)
a = rnorm(100,0,10)
b = rnorm(100,0,10)
mean(a)-mean(b)
mean(a-b)
d = structure(list(
Subj.ID = 101:120,
Group = structure(c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
.Label = c("Control", "Treatment"), class = "factor"),
Tx = c(-0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5),
T1 = c(3L, 4L, 4L, 5L, 5L, 5L, 5L, 6L, 6L, 7L, 3L, 4L, 4L, 5L, 5L, 5L, 5L, 6L, 6L, 7L),
T2 = c(5L, 4L, 5L, 6L, 6L, 7L, 6L, 6L, 8L, 7L, 5L, 7L, 6L, 7L, 6L, 7L, 8L, 7L, 9L, 8L),
T3 = c(5L, 6L, 7L, 6L, 7L, 7L, 8L, 7L, 9L, 8L, 7L, 9L, 8L, 9L, 9L, 10L, 8L, 9L, 11L, 10L),
T4 = c(7L, 6L, 8L, 8L, 8L, 7L, 8L, 9L, 10L, 9L, 9L, 11L, 11L, 10L, 11L, 10L, 11L, 12L, 13L, 12L),
T4.T1 = c(4L, 2L, 4L, 3L, 3L, 2L, 3L, 3L, 4L, 2L, 6L, 7L, 7L, 5L, 6L, 5L, 6L, 6L, 7L, 5L)),
.Names = c("Subj.ID", "Group", "Tx", "T1", "T2", "T3", "T4", "T4.T1"), class = "data.frame", row.names = c(NA, -20L))
1:5 - 1:4
8:12 - 1:3
split(1:4,c("a","b","a","b"))
l = split(1:4,c("a","b","a","b"))
l[[1]]
l[[2]]
diff(1:10,5)
diff(1:10)
pt(q = 4.29, df = 9, ncp = 5)
pt(q = 4.29, df = 9, ncp = 5)
f
uniroot(function(x)<-0.025-pt(q = 4.29, df = 9, ncp = x),c(0,10))
uniroot(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),c(0,10))
time(uniroot(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),c(0,10)))
system.time(uniroot(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),c(0,10)))
plot(1:100/10,pt(q = 4.29, df = 9, ncp = 1:100/10))
plot(1:100/10,pt(q = 4.29, df = 9, ncp = 1:100/10),t="l")
shapiro.test(runif(100))
shapiro.test(runif(10))
dicotomic <- function(f,a,b){
eps = .Machine$double.eps^0.25
fa = f(a)
fb = f(b)
if( sign(fa)==sign(fb) ){
stop("Non monothonic")
return()
}
for(i in 1:1000){
c= (a+b)/2
fc = f(c)
if( abs(fc) < eps ){
return(c)
}
if(sign(fa)==sign(fc)){
a=c
fa=fc
}else{
b=c
fb=fc
}
}
}
dicotomic(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),0,10)
uniroot(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),c(0,10))$root
pt(q = 4.29, df = 9, ncp = 6.99707)
pt(q = 4.29, df = 9, ncp = 6.997621)
pt(q = 4.29, df = 9, ncp = 6.99707)-0.25
pt(q = 4.29, df = 9, ncp = 6.99707)-0.025
pt(q = 4.29, df = 9, ncp = 6.997621)-0.025
.Machine$double.eps^0.25
.Machine$double.eps
dicotomic <- function(f,a,b){
eps = .Machine$double.eps
fa = f(a)
fb = f(b)
if( sign(fa)==sign(fb) ){
stop("Non monothonic")
return()
}
for(i in 1:1000){
c= (a+b)/2
fc = f(c)
if( abs(fc) < eps ){
return(c)
}
if(sign(fa)==sign(fc)){
a=c
fa=fc
}else{
b=c
fb=fc
}
}
}
dicotomic(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),0,10)
pt(q = 4.29, df = 9, ncp = 6.997614)-0.025
dicotomic <- function(f,a,b){
eps = .Machine$double.eps
fa = f(a)
fb = f(b)
if( sign(fa)==sign(fb) ){
stop("Non monothonic")
return()
}
for(i in 1:1000){
c= (a+b)/2
fc = f(c)
if( abs(fc) < eps ){
cat("eps\n")
return(c)
}
if(sign(fa)==sign(fc)){
a=c
fa=fc
}else{
b=c
fb=fc
}
}
cat("iter\n")
}
dicotomic(function(x) 0.025-pt(q = 4.29, df = 9, ncp = x),0,10)
set.seet(50)
set.seed(50)
runif(10)
set.seed(50)
runif(10)
delta = c(1.73, 1.06, 2.03, 1.40, 0.95, 1.13, 1.41, 1.73, 1.63, 1.56)
set.seed(50)
a = delta - runif(10)
set.seed(50)
b = delta + runif(10)
cohen.d(a,b)
d.cohen(a,b)
source("R/CohenD.R")
d.cohen(a,b)
cohen.d(a,b)
cohen.d(a,b,noncentral = TRUE)
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
cohen.d(a,b,paired=TRUE)
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
t
diff(d,lag=n1)
d
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
t
d
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
cohen.d(a,b,paired=TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE)
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
(1+.95)/2
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
t
end2
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
t
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
pt(q=0.449931,df=9,ncp=0)
pt(q=0.449931,df=9,ncp=0.1)
pt(q=0.449931,df=9,ncp=1)
pt(q=0.449931,df=9,ncp=5)
pt(q=0.449931,df=9,ncp=0)
pt(q=0.449931,df=9,ncp=-1)
pt(q=0.449931,df=9,ncp=-2)
pt(q=0.449931,df=9,ncp=9)
pt(q=0.449931,df=9,ncp=-3)
pt(q=0.449931,df=9,ncp=-4)
pt(q=0.449931,df=9,ncp=-5)
pt(q=0.849931,df=9,ncp=-5)
pt(q=0.19931,df=9,ncp=-5)
pt(q=0.019931,df=9,ncp=-5)
pt(q=119931,df=9,ncp=-5)
pt(q=11,df=9,ncp=-5)
pt(q=4,df=9,ncp=-5)
pt(q=2,df=9,ncp=-5)
pt(q=4,df=9,ncp=0)
pt(q=4,df=9,ncp=-1)
pt(q=4,df=9,ncp=-5)
pt(q=4,df=923,ncp=-5)
pt(q=4,df=92,ncp=-5)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
cohen.d(a,b,paired=TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
delta = c(1.73, 1.06, 2.03, 1.40, 0.95, 1.13, 1.41, 1.73, 1.63, 1.56) - 1
set.seed(50)
a = delta - runif(10)
set.seed(50)
b = delta + runif(10)
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
a-b
b-a
delta
set.seed(50)
a = delta - runif(10)
set.seed(50)
b = delta + runif(10)
delta
b-a
set.seed(50)
runif(10)
delta = c(1.73, 1.06, 2.03, 1.40, 0.95, 1.13, 1.41, 1.73, 1.63, 1.56) - 1
set.seed(50)
a = delta
set.seed(50)
b = delta + runif(10)
b-a
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
sd(delta)
mean(delta)/(sd(delta)/sqrt(10))
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,paired=TRUE,noncentral = TRUE)
cohen.d(a,b,paired=TRUE)
a = rnorm(35,24,148.87)
a = rnorm(35,24,148.87)
b = rnorm(29,16.5,139.16)
cohen.d(a,b,noncentral = TRUE)
source("R/CohenD.R")
cohen.d(a,b,noncentral = TRUE)
set.seed(90)
a = rnorm(35,24,148.87)
b = rnorm(29,16.5,139.16)
cohen.d(a,b,noncentral = TRUE)
mean(a)
mean(b)
sd(a)
sd(b)
set.seed(20)
a = rnorm(35,24,148.87)
mean(a)
mean(a)
a = rnorm(35,24,148.87)
mean(a)
get.seed()
seed()
.Random.seed
set.seed(21)
a = rnorm(35,24,148.87)
mean(a)
set.seed(22)
a = rnorm(35,24,148.87)
mean(a)
set.seed(23)
a = rnorm(35,24,148.87)
mean(a)
set.seed(24)
a = rnorm(35,24,148.87)
mean(a)
set.seed(25)
a = rnorm(35,24,148.87)
mean(a)
set.seed(26)
a = rnorm(35,24,148.87)
mean(a)
set.seed(27)
a = rnorm(35,24,148.87)
mean(a)
set.seed(28)
a = rnorm(35,24,148.87)
mean(a)
set.seed(29)
a = rnorm(35,24,148.87)
mean(a)
set.seed(30)
a = rnorm(35,24,148.87)
mean(a)
set.seed(31)
a = rnorm(35,24,148.87)
mean(a)
set.seed(32)
a = rnorm(35,24,148.87)
mean(a)
set.seed(33)
a = rnorm(35,24,148.87)
mean(a)
set.seed(34)
a = rnorm(35,24,148.87)
mean(a)
set.seed(35)
a = rnorm(35,24,148.87)
mean(a)
set.seed(36)
a = rnorm(35,24,148.87)
mean(a)
set.seed(37)
a = rnorm(35,24,148.87)
mean(a)
set.seed(38)
a = rnorm(35,24,148.87)
mean(a)
set.seed(39)
a = rnorm(35,24,148.87)
mean(a)
set.seed(40)
a = rnorm(35,24,148.87)
mean(a)
set.seed(41)
a = rnorm(35,24,148.87)
mean(a)
set.seed(42)
a = rnorm(35,24,148.87)
mean(a)
set.seed(43)
a = rnorm(35,24,148.87)
mean(a)
set.seed(23)
a = rnorm(35,24,148.87)
mean(a)
set.seed(22)
a = rnorm(35,24,148.87)
mean(a)
sd(a)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(22)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(21)
b = rnorm(29,16.5,139.16)
mean(b)
sd(b)
set.seed(20)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(19)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(18)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(17)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(16)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(15)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(14)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(24)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(25)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(26)
b = rnorm(29,16.5,139.16)
mean(b)
sd(b)
set.seed(27)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(28)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(29)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(30)
b = rnorm(29,16.5,139.16)
mean(b)
set.seed(31)
b = rnorm(29,16.5,139.16)
mean(b)
sd(b)
cohen.d(a,b,noncentral = TRUE)
set.seed(22)
a = rnorm(35,24,148.87)
mean(a)
set.seed(31)
b = rnorm(29,16.5,139.16)
mean(b)
cohen.d(a,b,noncentral = TRUE)
cohen.d(a,b)
set.seed(22)
a = rnorm(35,24,sqrt(148.87))
mean(a)
set.seed(31)
b = rnorm(29,16.5,sqrt(139.16))
mean(b)
cohen.d(a,b,noncentral = TRUE)
cohen.d(a,b)
source("R/CohenD.R")
cohen.d(a,b,noncentral = TRUE)
0.5466219 * sqrt(1/29+1/35)
source("R/CohenD.R")
cohen.d(a,b,noncentral = TRUE)
cohen.d(a,b)
install.packages("MBESS")
delta = c(1.73, 1.06, 2.03, 1.40, 0.95, 1.13, 1.41, 1.73, 1.63, 1.56) - 1
set.seed(50)
a = delta
set.seed(50)
b = delta + runif(10)
eff.d = cohen.d(a,b,paired=TRUE)
eff.d
eff.dc = cohen.d(a,b,paired=TRUE,noncentral = TRUE)
eff.dc
source('~/Documents/Dev/R/effsize/tests/testCliff.R', echo=TRUE)
### Cohen's d test
library(effsize)
library(tools)
assert <- function(label,condition){
cat(label,": ")
if(!condition){
cat("Failed!\n")
}else{
cat("OK.\n")
}
}
set.seed(52)
x = rnorm(100,mean=10)
y = rnorm(100,mean=12)
d = (c(x,y))
f = rep(c("A","B"),each=100)
eff.d = cohen.d(d,f)
assert("Two samples with large difference", eff.d$conf.int[1] < -2 & -2 < eff.d$conf.int[2]  )
eff.g = cohen.d(d,f,hedges.correction=TRUE)
assert("Two samples with Hedges G", eff.g$conf.int[1] < -2 & -2 < eff.g$conf.int[2]  )
set.seed(54)
d <- rnorm(200)
f <- rep(c(1,2),100)
assertWarning( eff.d <<- cohen.d(d ~ f) )
assert("Two samples from same population",eff.d$conf.int[1] < 0 & 0 < eff.d$conf.int[2]  )
## noncentrality t
delta = c(1.73, 1.06, 2.03, 1.40, 0.95, 1.13, 1.41, 1.73, 1.63, 1.56) - 1
set.seed(50)
a = delta
set.seed(50)
b = delta + runif(10)
eff.d = cohen.d(a,b,paired=TRUE)
assert("Paired measures",abs(eff.d$estimate)-1.42 <0.01 )
# eff.dc = cohen.d(a,b,paired=TRUE,noncentral = TRUE)
# assert("Two samples from same population",eff.d$conf.int[1] < 0 & 0 < eff.d$conf.int[2]  )
#
#
# set.seed(22)
# a = rnorm(35,24,sqrt(148.87))
# mean(a)
# set.seed(31)
# b = rnorm(29,16.5,sqrt(139.16))
# mean(b)
# cohen.d(a,b,noncentral = TRUE)
# cohen.d(a,b)
#
clear
clear
treatment = c(10,10,20,20,20,30,30,30,40,50)
control = c(10,20,30,40,40,50)
cliff.delta(treatment,control,use.unbiased=F,use.normal=T)
library(effsize)
source("R/CliffDelta.R")
cliff.delta(treatment,control,use.unbiased=F,use.normal=T)
d = c(treatment,control)
f = rep(c("Treat","Control"),c(length(treatment),lenght(control)))
f = rep(c("Treat","Control"),c(length(treatment),length(control)))
cliff.delta(d,f,use.unbiased=F,use.normal=T)
cliff.delta(treatment,control,use.unbiased=F,use.normal=T)
median(treatment)
median(control)
f = rep(c("Control","Treat"),c(length(control),length(treatment)))
d = c(control,treatment)
f = rep(c("Control","Treat"),c(length(control),length(treatment)))
cliff.delta(d,f,use.unbiased=F,use.normal=T)
cliff.delta(treatment,control,use.unbiased=F,use.normal=T)
factor(c("B,"B","A"))
factor(c("B","B","A"))
factor(c("B","B","A"),levels=c("B","A"))
library(effsize)
library(effsize)
